# Method: `deleteRoom`

Removes a specific poker room from the Casino's list of managed rooms based on its index.

**üóÇÔ∏è Table Of Contents**
- [Method: `deleteRoom`](#method-deleteroom)
  - [Description](#description)
      - [Implements](#implements)
      - [Overrides](#overrides)
      - [Purpose](#purpose)
      - [Events](#events)
      - [Requirements](#requirements)
  - [Casino - The class this method belongs to.](#casino---the-class-this-method-belongs-to)
  - [Parameters](#parameters)
  - [Returns](#returns)
  - [Throws](#throws)
  - [Usage](#usage)
  - [Examples](#examples)
    - [Basic Example:](#basic-example)

## Description

#### Implements
Implements the `deleteRoom` method of `CasinoInterface`.

#### Overrides
`N/A`

#### Purpose
Provides a mechanism for removing a poker room from the Casino‚Äôs list, ensuring the Casino remains current by dynamically managing active rooms.

#### Events
- `casino:roomDeleted`: Emits this event after a room is successfully removed, notifying listeners of changes in the room list.

#### Requirements
- The `index` parameter must be a valid zero-based index within the bounds of the `__rooms` array.

---

## Casino - The class this method belongs to.

---

## Parameters
| Parameter Name | Type     | Default Value | Description                                |
|----------------|----------|---------------|--------------------------------------------|
| `index`        | `number` | `N/A`         | The zero-based index of the room to be removed.|

---

## Returns
| Type                  | Description                                |
|-----------------------|--------------------------------------------|
| `PokerRoomInterface[]`| The updated list of poker rooms managed by the Casino.|

---

## Throws
| Error Type    | Description                                |
|---------------|--------------------------------------------|
| `Error`       | If the `index` is out of bounds or invalid. |

---

## Usage
Removes a room from the Casino‚Äôs list of managed rooms by its index. After removal, it emits an event to notify listeners.

---

## Examples
### Basic Example:
```typescript
const casino = new Casino();
casino.createRoom({ name: "Room1", tableSize: 6, smallBlind: 10, bigBlind: 20 });
console.log(casino.getRooms()); // Logs: [PokerRoom]
casino.deleteRoom(0);
console.log(casino.getRooms()); // Logs: []
```
